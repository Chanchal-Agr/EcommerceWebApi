@page "/"
@using OnlineShoppingECommerceApplication.Frontend.Interfaces
@using OnlineShoppingECommerceApplication.Frontend.Models
@using OnlineShoppingECommerceApplication.Frontend.Services
@layout LoginLayout
<PageTitle>Login</PageTitle>
<EditForm Model="@loginRequest" OnValidSubmit="HandleValidSubmit">
    <h3>User Login</h3>
    <hr />
    <div class="container">
        <h2>Login</h2>
            <div class="form-group">
                <label for="username">Username</label>
                <InputText id="username" name="username" required  placeholder="User Name"
                           @bind-Value="loginRequest.Email" />
                <ValidationMessage For="@(() => loginRequest.Email)" />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <InputText type="password" id="password" name="password" required @bind-Value="loginRequest.Password" />
                <ValidationMessage For="@(() => loginRequest.Password)" />
            </div>
            <button type="submit">Login</button>
              <div class="top-row px-4">
            <a @onclick="Register">Register</a>
        </div>
    </div>
</EditForm>
@code
{
    private LoginRequest loginRequest { get; set; } = new LoginRequest();
    [Inject]
    private ILoginService LoginService { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }
    [Inject]
    public CustomAuthStateProvider Auth { get; set; }

    protected async Task HandleValidSubmit()
    {
        var result = await LoginService.Authenticate(loginRequest);
        if (result != null)
        {
            await Auth.MarkUserAsAuthenticated(result.Token);
            NavigationManager.NavigateTo("/Home");
        }
    }
    private async void Register()
    {
        NavigationManager.NavigateTo("/Register");
    }
}